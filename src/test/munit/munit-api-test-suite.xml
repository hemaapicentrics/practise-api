<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="munit-api-test-suite.xml" />
	<munit:test name="munit-api-test-suite-munit-apiFlowTest" doc:id="66a7389a-4e79-417e-9fd5-49cdd166c3cf" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="d80abc3b-1dfa-4efd-a5d5-9004d6364beb" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="4767dcbf-89c0-4c89-9630-110944260109" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#[["yeswanth","aniketh"]]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:spy doc:name="Spy" doc:id="2ea888b3-e10c-4122-bc45-7096e1f97706" processor="db:select">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="4767dcbf-89c0-4c89-9630-110944260109" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:before-call >
					<set-variable value="#[payload]" doc:name="Set Variable" doc:id="bf346a95-a52d-43fe-a5f1-d3e12b0c13f2" variableName="beforetest"/>
				</munit-tools:before-call>
				<munit-tools:after-call >
					<set-variable value="#[payload]" doc:name="Set Variable" doc:id="f1532ed9-0b60-4cbe-90e2-56c1d32dacb4" variableName="aftertest" />
				</munit-tools:after-call>
			</munit-tools:spy>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="537e7d29-ea55-4d23-a793-3ad6d9d13779" >
				<munit:payload value='#[["sending payload from set event"]]' />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to munit-apiFlow" doc:id="0492ed2d-ab32-45ee-857c-ade09bc8bc63" name="munit-apiFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="14e8e5b7-80b8-4c6d-93fe-d06afeea57d5" actual="#[payload]" expected='#[["yeswanth","aniketh"]]'/>
			<munit-tools:verify-call doc:name="Verify call" doc:id="79692ba0-12ff-4797-9927-2366b05ec212" processor="db:select" atLeast="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="4767dcbf-89c0-4c89-9630-110944260109" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="munit-apiFlow1-test-automation" doc:id="3ac77853-95ab-4342-b5ba-7c212fb95769" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock Read" doc:id="d94a146b-7dab-4684-b4fb-a5ab0956f8c4" processor="file:read">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="4c2b0441-5064-4215-a9f1-d7e84cef13b8" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output text/plain --- readUrl('classpath://munitapiFlow1testautomation\mock_payload.dwl')]" mediaType="text/plain" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://munitapiFlow1testautomation\mock_attributes.dwl')]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="630a10f4-3a61-4ebd-9229-3ba34076b6f8" >
				<munit:payload value="#[readUrl('classpath://munitapiFlow1testautomation\set-event_payload.dwl')]" encoding="UTF-8" />
				<munit:attributes value="#[readUrl('classpath://munitapiFlow1testautomation\set-event_attributes.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to munit-apiFlow1" doc:id="97e1000f-93cd-402b-b63d-9df411312c37" name="munit-apiFlow1"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="da95a131-1479-4ce1-9b73-9845adf1a7ea" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import munitapiFlow1testautomation::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify Transform Message" doc:id="e4f0d136-9298-40de-83b5-f1680998f56e" processor="ee:transform" times="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="d26cd6c7-5448-441a-b768-9a165f7145be" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>


</mule>
